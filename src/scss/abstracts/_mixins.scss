
@mixin font-size($fs-map, $breakpoints-map: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }

    @else {
      @if map-has-key($breakpoints-map, $fs-breakpoint) {
        $fs-breakpoint: map-get($breakpoints-map, $fs-breakpoint);

        @media (min-width: $fs-breakpoint) {
          font-size: $fs-font-size;
        }
      }
    }
  }
}

@mixin flex-container($direction: row, $wrap: nowrap, $spacing: null, $alignment: null) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  align-items: $alignment;
  justify-content: $spacing;
}

@mixin flexible-grid-container($min-width: 280px, $column-gap: null, $row-gap: $column-gap) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));

  column-gap: $column-gap;
  row-gap: $row-gap;
}
